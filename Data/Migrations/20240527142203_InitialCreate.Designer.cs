// <auto-generated />
using System;
using FlashGamingHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlashGamingHub.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240527142203_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FlashGamingHub.Models.Community", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageID"), 1L, 1);

                    b.Property<bool>("ActiveMember")
                        .HasColumnType("bit");

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MessageID");

                    b.HasIndex("GameID");

                    b.HasIndex("UserID");

                    b.ToTable("Communities");

                    b.HasData(
                        new
                        {
                            MessageID = 1,
                            ActiveMember = true,
                            GameID = 1,
                            LikesCount = 100,
                            Message = "Community1",
                            PublicationDate = new DateTime(2023, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5243),
                            UserID = 1
                        },
                        new
                        {
                            MessageID = 2,
                            ActiveMember = true,
                            GameID = 1,
                            LikesCount = 150,
                            Message = "Community2",
                            PublicationDate = new DateTime(2022, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5247),
                            UserID = 2
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameID"), 1L, 1);

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.Property<int>("StudioID")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("GameID");

                    b.HasIndex("StoreID");

                    b.HasIndex("StudioID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            Categories = "Races, Multiplayer, One Person",
                            Description = "Description1",
                            Discount = 0,
                            Name = "Game1",
                            Price = 59.99m,
                            ReleaseDate = new DateTime(2023, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5188),
                            StoreID = 1,
                            StudioID = 1,
                            Synopsis = "Short description about game's history"
                        },
                        new
                        {
                            GameID = 2,
                            Categories = "Races, Multiplayer, Shooting",
                            Description = "Description2",
                            Discount = 0,
                            Name = "Game2",
                            Price = 49.99m,
                            ReleaseDate = new DateTime(2022, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5192),
                            StoreID = 2,
                            StudioID = 2,
                            Synopsis = "Short description about game's history"
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.GameShop", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"), 1L, 1);

                    b.Property<int>("AnnualSales")
                        .HasColumnType("int");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("StoreID");

                    b.ToTable("GameShops");

                    b.HasData(
                        new
                        {
                            StoreID = 1,
                            AnnualSales = 1000,
                            Event = "",
                            LastUpdated = new DateTime(2024, 4, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5167),
                            Origin = "Origin1",
                            Stock = 100
                        },
                        new
                        {
                            StoreID = 2,
                            AnnualSales = 1200,
                            Event = "",
                            LastUpdated = new DateTime(2024, 5, 7, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5171),
                            Origin = "Origin2",
                            Stock = 150
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.LibraryGameUser", b =>
                {
                    b.Property<int>("LibraryGameUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryGameUserId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursPlayed")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LibraryGameUserId");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("LibraryGameUsers");

                    b.HasData(
                        new
                        {
                            LibraryGameUserId = 1,
                            AddedDate = new DateTime(2023, 11, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5221),
                            HoursPlayed = 50,
                            LastPlayed = new DateTime(2024, 5, 20, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5225),
                            Rating = 4,
                            UserID = 1
                        },
                        new
                        {
                            LibraryGameUserId = 2,
                            AddedDate = new DateTime(2024, 2, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5227),
                            HoursPlayed = 100,
                            LastPlayed = new DateTime(2024, 5, 22, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5230),
                            Rating = 5,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartID"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");

                    b.HasData(
                        new
                        {
                            ShoppingCartID = 1,
                            FechaCreacion = new DateTime(2024, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5259),
                            Total = 0m,
                            UserID = 1
                        },
                        new
                        {
                            ShoppingCartID = 2,
                            FechaCreacion = new DateTime(2024, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5261),
                            Total = 0m,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.Studio", b =>
                {
                    b.Property<int>("StudioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudioID"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailContact")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fundation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudioID");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            StudioID = 1,
                            Country = "Country1",
                            EmailContact = "studio1@example.com",
                            EmailLogin = "studio1login@example.com",
                            Fundation = new DateTime(2014, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5033),
                            Name = "Studio1",
                            Password = "studio1password",
                            Website = "www.studio1.com"
                        },
                        new
                        {
                            StudioID = 2,
                            Country = "Country2",
                            EmailContact = "studio2@example.com",
                            EmailLogin = "studio2login@example.com",
                            Fundation = new DateTime(2019, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5069),
                            Name = "Studio2",
                            Password = "studio2password",
                            Website = "www.studio2.com"
                        });
                });

            modelBuilder.Entity("FlashGamingHub.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LibraryGameUserID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Age = 30,
                            Email = "user1@example.com",
                            LibraryGameUserID = 1,
                            Name = "User1",
                            Password = "password1",
                            RegisterDate = new DateTime(2022, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5206),
                            Role = "admin",
                            Surname = "Surname1"
                        },
                        new
                        {
                            UserID = 2,
                            Age = 25,
                            Email = "user2@example.com",
                            LibraryGameUserID = 2,
                            Name = "User2",
                            Password = "password2",
                            RegisterDate = new DateTime(2023, 5, 27, 16, 22, 3, 195, DateTimeKind.Local).AddTicks(5210),
                            Role = "admin",
                            Surname = "Surname2"
                        });
                });

            modelBuilder.Entity("GameLibraryGameUser", b =>
                {
                    b.Property<int>("GamesGameID")
                        .HasColumnType("int");

                    b.Property<int>("LibraryGameUserId")
                        .HasColumnType("int");

                    b.HasKey("GamesGameID", "LibraryGameUserId");

                    b.HasIndex("LibraryGameUserId");

                    b.ToTable("GameLibraryGameUser");
                });

            modelBuilder.Entity("GameShoppingCart", b =>
                {
                    b.Property<int>("GamesGameID")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartID")
                        .HasColumnType("int");

                    b.HasKey("GamesGameID", "ShoppingCartID");

                    b.HasIndex("ShoppingCartID");

                    b.ToTable("GameShoppingCart");
                });

            modelBuilder.Entity("FlashGamingHub.Models.Community", b =>
                {
                    b.HasOne("FlashGamingHub.Models.Game", "Game")
                        .WithMany("messages")
                        .HasForeignKey("GameID");

                    b.HasOne("FlashGamingHub.Models.User", "User")
                        .WithMany("messages")
                        .HasForeignKey("UserID");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlashGamingHub.Models.Game", b =>
                {
                    b.HasOne("FlashGamingHub.Models.GameShop", "StoreAvaidable")
                        .WithMany("Games")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlashGamingHub.Models.Studio", "Studio")
                        .WithMany("Games")
                        .HasForeignKey("StudioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreAvaidable");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("FlashGamingHub.Models.LibraryGameUser", b =>
                {
                    b.HasOne("FlashGamingHub.Models.User", "User")
                        .WithOne("libraryGameUser")
                        .HasForeignKey("FlashGamingHub.Models.LibraryGameUser", "UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlashGamingHub.Models.ShoppingCart", b =>
                {
                    b.HasOne("FlashGamingHub.Models.User", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("FlashGamingHub.Models.ShoppingCart", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameLibraryGameUser", b =>
                {
                    b.HasOne("FlashGamingHub.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesGameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlashGamingHub.Models.LibraryGameUser", null)
                        .WithMany()
                        .HasForeignKey("LibraryGameUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameShoppingCart", b =>
                {
                    b.HasOne("FlashGamingHub.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesGameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlashGamingHub.Models.ShoppingCart", null)
                        .WithMany()
                        .HasForeignKey("ShoppingCartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlashGamingHub.Models.Game", b =>
                {
                    b.Navigation("messages");
                });

            modelBuilder.Entity("FlashGamingHub.Models.GameShop", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("FlashGamingHub.Models.Studio", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("FlashGamingHub.Models.User", b =>
                {
                    b.Navigation("ShoppingCart")
                        .IsRequired();

                    b.Navigation("libraryGameUser")
                        .IsRequired();

                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}
